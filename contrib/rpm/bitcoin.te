policy_module(lood, 1.100.1)

########################################
#
# Declarations
#

type lood_t;
type lood_exec_t;
init_daemon_domain(lood_t, lood_exec_t)

permissive lood_t;

type lood_initrc_exec_t;
init_script_file(lood_initrc_exec_t)

type lood_conf_t;
files_type(lood_conf_t)

type lood_var_lib_t;
files_type(lood_var_lib_t)

type lood_var_run_t;
files_type(lood_var_run_t)

type lood_port_t;
corenet_port(lood_port_t)

########################################
#
# lood local policy
#
allow lood_t self:process { fork };

allow lood_t self:fifo_file rw_fifo_file_perms;
allow lood_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(lood_t, lood_conf_t, lood_conf_t)
manage_files_pattern(lood_t, lood_conf_t, lood_conf_t)

manage_dirs_pattern(lood_t, lood_var_lib_t, lood_var_lib_t)
manage_files_pattern(lood_t, lood_var_lib_t, lood_var_lib_t)
files_var_lib_filetrans(lood_t, lood_var_lib_t, { dir file })

manage_dirs_pattern(lood_t, lood_var_run_t, lood_var_run_t)
manage_files_pattern(lood_t, lood_var_run_t, lood_var_run_t)

sysnet_dns_name_resolve(lood_t)
corenet_all_recvfrom_unlabeled(lood_t)

allow lood_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(lood_t)
corenet_tcp_sendrecv_generic_node(lood_t)
corenet_tcp_sendrecv_all_ports(lood_t)
corenet_tcp_bind_generic_node(lood_t)

gen_require(`
    type lood_port_t;
')
allow lood_t lood_port_t:tcp_socket name_bind;

gen_require(`
    type lood_port_t;
')
allow lood_t lood_port_t:tcp_socket name_connect;

domain_use_interactive_fds(lood_t)

files_read_etc_files(lood_t)

miscfiles_read_localization(lood_t)

sysnet_dns_name_resolve(lood_t)

allow lood_t lood_exec_t:file execute_no_trans;
allow lood_t self:process setsched;
corecmd_exec_ls(lood_t)
corenet_tcp_connect_http_port(lood_t)
dev_read_urand(lood_t)
fs_getattr_xattr_fs(lood_t)
kernel_read_system_state(lood_t)
